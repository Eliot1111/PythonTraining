### 1. Бинарный поиск

##Задача 1:# Реализуйте бинарный поиск для отсортированного массива целых чисел. Входные данные: отсортированный массив целых чисел и целое число для поиска.

##Задача 2:# Модифицируйте бинарный поиск для поиска первого вхождения целого числа в отсортированном массиве, содержащем повторяющиеся элементы.

##Задача 3:# Модифицируйте бинарный поиск для поиска последнего вхождения целого числа в отсортированном массиве, содержащем повторяющиеся элементы.

##Задача 4:# Используя бинарный поиск, найдите наименьшее число, большее или равное заданному числу в отсортированном массиве.

#Задача 5:# Используя бинарный поиск, найдите наибольшее число, меньшее или равное заданному числу в отсортированном массиве.

#Задача 6:# Модифицируйте бинарный поиск для поиска наименьшего положительного числа, отсутствующего в отсортированном массиве.

#Задача 7:# Модифицируйте бинарный поиск для поиска ближайшего к заданному числу в отсортированном массиве.

#Задача 8:# Примените бинарный поиск для нахождения квадратного корня целого числа с точностью до заданного знака после запятой.

#Задача 9:# Примените бинарный поиск для нахождения минимального значения в отсортированном и циклически сдвинутом массиве (например, [4, 5, 6, 7, 0, 1, 2]).

#Задача 10:# Используя бинарный поиск, найдите индекс первого элемента, большего заданного числа, в отсортированном массиве, содержащем дубликаты.

### 2. Быстрая сортировка

#Задача 1:# Реализуйте алгоритм быстрой сортировки для массива целых чисел.

#Задача 2:# Модифицируйте быструю сортировку для сортировки массива строк.

#Задача 3:# Реализуйте быструю сортировку для массива с числовыми и строковыми элементами (типизация данных).

#Задача 4:# Реализуйте быструю сортировку с использованием случайного выбора опорного элемента.

#Задача 5:# Модифицируйте быструю сортировку для сортировки массива по убыванию.

#Задача 6:# Реализуйте быструю сортировку для массива объектов на основе заданного свойства объекта.

#Задача 7:# Оптимизируйте быструю сортировку для обработки больших массивов с большим количеством дубликатов элементов.

#Задача 8:# Реализуйте быструю сортировку с использованием трехстороннего разбиения (three-way partitioning) для обработки массивов с дубликатами.

#Задача 9:# Измерьте и сравните время выполнения быстрой сортировки с сортировкой слиянием для случайных и отсортированных массивов.

#Задача 10:# Реализуйте гибридный алгоритм сортировки, который использует быструю сортировку для больших массивов и сортировку вставками для маленьких подмассивов.

### 3. Рекурсия

#Задача 1:# Реализуйте функцию для вычисления факториала числа с использованием рекурсии.

#Задача 2:# Реализуйте рекурсивную функцию для вычисления чисел Фибоначчи.

#Задача 3:# Реализуйте рекурсивную функцию для нахождения наибольшего общего делителя (НОД) двух чисел.

#Задача 4:# Напишите рекурсивную функцию для нахождения суммы элементов массива.

#Задача 5:# Напишите рекурсивную функцию для нахождения максимального элемента в массиве.

#Задача 6:# Реализуйте рекурсивную функцию для переворота строки.

#Задача 7:# Напишите рекурсивную функцию для генерации всех перестановок строки.

#Задача 8:# Реализуйте рекурсивную функцию для решения задачи о Ханойских башнях.

#Задача 9:# Напишите рекурсивную функцию для поиска пути в лабиринте (матрица), начиная с верхнего левого угла до нижнего правого угла.

#Задача 10:# Реализуйте рекурсивную функцию для вычисления мощности числа (a^b), оптимизируя ее с использованием быстрого возведения в степень.