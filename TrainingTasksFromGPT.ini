Тренировка list:

Конечно! Вот несколько задач, которые помогут вам попрактиковаться с различными методами работы со списками в Python. Эти задачи включают интересные условия и операции.

### Задача 1: Уникальные элементы

**Условие:**
Напишите функцию, которая принимает два списка и возвращает новый список, содержащий только уникальные элементы из обоих списков.

**Пример:**
```python
list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]
# Ожидаемый результат: [1, 2, 3, 4, 5, 6]
```

### Задача 2: Сортировка по длине строк

**Условие:**
Напишите функцию, которая принимает список строк и возвращает список, отсортированный по длине строк.

**Пример:**
```python
strings = ["apple", "banana", "kiwi", "watermelon"]
# Ожидаемый результат: ['kiwi', 'apple', 'banana', 'watermelon']
```

### Задача 3: Объединение и сортировка списков

**Условие:**
Напишите функцию, которая принимает два списка чисел, объединяет их, удаляет дублирующиеся значения и возвращает отсортированный список.

**Пример:**
```python
list1 = [3, 1, 4, 1, 5]
list2 = [9, 2, 6, 5, 3]
# Ожидаемый результат: [1, 2, 3, 4, 5, 6, 9]
```

### Задача 4: Четные и нечетные числа

**Условие:**
Напишите функцию, которая принимает список чисел и возвращает два списка: один с четными числами и другой с нечетными.

**Пример:**
```python
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# Ожидаемый результат: ([2, 4, 6, 8, 10], [1, 3, 5, 7, 9])
```

### Задача 5: Перемешивание списка

**Условие:**
Напишите функцию, которая принимает список и возвращает новый список с элементами в случайном порядке.

**Пример:**
```python
list1 = [1, 2, 3, 4, 5]
# Ожидаемый результат: [3, 1, 5, 2, 4] (или любой другой случайный порядок)
```

### Задача 6: Сумма подсписков

**Условие:**
Напишите функцию, которая принимает список списков (двумерный список) и возвращает список, содержащий сумму элементов каждого подсписка.

**Пример:**
```python
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# Ожидаемый результат: [6, 15, 24]
```

### Задача 7: Найти повторяющиеся элементы

**Условие:**
Напишите функцию, которая принимает список и возвращает список повторяющихся элементов.

**Пример:**
```python
numbers = [1, 2, 3, 1, 2, 4, 5, 6, 4, 7, 8, 6]
# Ожидаемый результат: [1, 2, 4, 6]
```

### Задача 8: Перевернуть список

**Условие:**
Напишите функцию, которая принимает список и возвращает его в обратном порядке без использования встроенных функций.

**Пример:**
```python
list1 = [1, 2, 3, 4, 5]
# Ожидаемый результат: [5, 4, 3, 2, 1]
```

### Задача 9: Подсчет слов в строке

**Условие:**
Напишите функцию, которая принимает строку и возвращает словарь, где ключами являются слова, а значениями – количество их вхождений в строку. Игнорируйте знаки препинания и регистр.

**Пример:**
```python
text = "Hello, hello! How are you, you, you?"
# Ожидаемый результат: {'hello': 2, 'how': 1, 'are': 1, 'you': 3}
```

### Задача 10: Сортировка списка кортежей

**Условие:**
Напишите функцию, которая принимает список кортежей и сортирует его по второму элементу каждого кортежа.

**Пример:**
```python
tuples = [(1, 'one'), (3, 'three'), (2, 'two'), (4, 'four')]
# Ожидаемый результат: [(1, 'one'), (4, 'four'), (3, 'three'), (2, 'two')]
```

Эти задачи помогут вам освоить различные методы и операции со списками в Python. Если у вас возникнут вопросы или потребуется помощь с решениями, дайте знать!